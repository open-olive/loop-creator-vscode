import { whisper } from '@oliveai/ldk';

{{ @if (it.isTypeScript) }}
interface Props {
  screenText{{ it.isTypeScript ? '?: string' : '' }};
}
{{ /if }}

export const onClose = (err{{ it.isTypeScript ? '?: Error' : '' }}) => {
  if (err) {
    console.error('Error closing Screen Whisper', err);
  }
};

export default {
  show: (screenText{{ it.isTypeScript ? '?: string' : '' }}) => {
    const components{{ it.isTypeScript ? ': whisper.Component[]' : '' }} = [];

    const message: whisper.Message = {
      type: whisper.WhisperComponentType.Message,
      body: screenText,
    };

    components.push(message);

    return whisper.create({
      components,
      label: 'Screen Aptitude Fired',
      onClose,
    });
  },
};
