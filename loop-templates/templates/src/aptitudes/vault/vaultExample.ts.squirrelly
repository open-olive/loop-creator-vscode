import { vault } from '@oliveai/ldk';
import { VaultWhisper } from '../../whispers';

const ONE_DAY = 24 * 60 * 60 * 1000;

// Settings that can be updated with random new tokens and expiration time
const createLoopDefaultSettings = {
  user: 'Example@mail.com',
  token: 'ExampleToken',
  tokenExpire: '819188640000',
};

// Removes settings from macOS keychain or windows credential manager
// after one day has passed
const removeSettings = async () => {
  await vault.remove('settingsExpire');
  await vault.remove('createLoopDefaultSettings');
  console.log('Removed createLoopDefaultSettings and settingsExpire from vault');
};

const run = async () => {
  const storedSettings = await vault.exists('createLoopDefaultSettings');
  const storedTimeExp = await vault.exists('settingsExpire');

  if (!storedSettings && !storedTimeExp) {
    await vault.write('createLoopDefaultSettings', JSON.stringify(createLoopDefaultSettings));
    await vault.write('settingsExpire', (new Date().getTime() + ONE_DAY).toString());
    console.log('Added createLoopDefaultSettings and settingsExpire to vault');

    setTimeout(async () => {
      await removeSettings();
    }, ONE_DAY);
  } else {
    const currTime = new Date().getTime();
    const timeDiff = currTime - Number(await vault.read('settingsExpire'));
    if (timeDiff > 0) {
      await removeSettings();
    } else {
      setTimeout(async () => {
        await removeSettings();
      }, Math.abs(timeDiff));
    }
  }

  await VaultWhisper.show(await vault.read('createLoopDefaultSettings'));
};

export default { run };
